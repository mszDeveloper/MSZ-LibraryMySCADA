<y:ClassVirtualAdd
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:wpfMszControl.Pid"
        xmlns:pid="clr-namespace:wpfLibMszControl.Pid"
        xmlns:NumericUpDown="clr-namespace:LibraryMySCADA" 
        xmlns:ArrowPointer="clr-namespace:wpfLibMszControl.ArrowPointer" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:y="clr-namespace:LibraryMySCADA.Virt"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        x:Name="classPID" x:Class="wpfMszControl.Pid.ucPid"
        mc:Ignorable="d" Loaded="classPID_Loaded" Height="284" 
>


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/LibraryMySCADA;component/Simple Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <!--<Style TargetType="local:ucPid">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Panel.ZIndex" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>-->


            <pid:PID x:Key="_Pid"/>

            <Style x:Key="LabelStyle_time" TargetType="{x:Type Label}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Template">

                    <Setter.Value>

                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border  BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3"  Width="Auto" Height="Auto">

                                <Viewbox Stretch="Uniform" >
                                    <ContentPresenter RecognizesAccessKey="True"  Height="Auto" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" UseLayoutRounding="False"/>

                                </Viewbox>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonStyle_Hide" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="#FFDDDDDD"/>
                <Setter Property="BorderBrush" Value="#FF707070"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid>
                                    <Path Data="M4.4964966,5.0118374 L23.219069,22.353149" Fill="#FFF4F4F5" Height="Auto" Margin="3.24,3.112,2.814,3.803" Stretch="Fill" Stroke="Black" VerticalAlignment="Stretch" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                    <Path Data="M20.463117,3.1115908 L4.1010343,21.196855" Fill="#FFF4F4F5" HorizontalAlignment="Stretch" Margin="3.24,3.112,2.814,3.803" Stretch="Fill" Stroke="Black" Width="Auto" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="FlowDocumentScrollViewerControlTemplate1" TargetType="{x:Type FlowDocumentScrollViewer}">
                <Grid Language="ru-ru" Uid="Grid_26">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0" Uid="Border_49" CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost" CanContentScroll="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Uid="ScrollViewer_8" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,1,1,-1" Template="{DynamicResource ScrollViewerControlTemplate1}"/>
                    </Border>
                    <Border x:Name="PART_ToolBarHost" Background="{TemplateBinding Background}" Grid.Row="0" Uid="Border_51" Margin="0,2,19.376,2" Grid.RowSpan="1" HorizontalAlignment="Right" Width="217.351">
                        <Grid Uid="Grid_34" Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="PART_FindToolBarHost" Grid.Column="0" HorizontalAlignment="Left" Uid="Border_61" Visibility="Collapsed" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <Slider Grid.Column="0" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Right" LargeChange="{TemplateBinding ZoomIncrement}" Maximum="{TemplateBinding MaxZoom}" Minimum="{TemplateBinding MinZoom}" SmallChange="{TemplateBinding ZoomIncrement}" TickFrequency="{TemplateBinding ZoomIncrement}" Uid="Slider_2" Value="{Binding Zoom, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" Width="78.023" Margin="0,0,19.376,0" Grid.ColumnSpan="1" Height="10.959" d:LayoutOverrides="VerticalAlignment">
                        <Slider.Style>
                            <Style TargetType="{x:Type Slider}">
                                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="#00000000"/>
                                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="IsSnapToTickEnabled" Value="True"/>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="MinWidth" Value="50"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="Padding" Value="2,0"/>
                                <Setter Property="Height" Value="Auto"/>
                                <Setter Property="Opacity" Value="0.75"/>
                                <Setter Property="Delay" Value="1000"/>
                                <Setter Property="Interval" Value="250"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Slider}">
                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}" Uid="Border_45" Height="9.21" VerticalAlignment="Top">
                                                <Grid ClipToBounds="False" Uid="Grid_22">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Uid="TickBar_1" Visibility="Collapsed"/>
                                                    <Border Background="{TemplateBinding Foreground}" CornerRadius="2" Height="2" Opacity="0.5" Grid.Row="1" Uid="Border_46"/>
                                                    <Canvas Height="4" Grid.Row="1" Uid="Canvas_7" VerticalAlignment="Center">
                                                        <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Foreground}" Height="2" Canvas.Top="1" Uid="Rectangle_17" Visibility="Hidden"/>
                                                    </Canvas>
                                                    <Track x:Name="PART_Track" Grid.Row="1" Uid="PART_Track">
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton Command="Slider.DecreaseLarge" Uid="RepeatButton_1">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border Background="Transparent" Uid="Border_43"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Command="Slider.IncreaseLarge" Uid="RepeatButton_2">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border Background="Transparent" Uid="Border_43"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb Background="{TemplateBinding Background}" Uid="Thumb_5" Height="11.93" VerticalAlignment="Top" HorizontalAlignment="Left" Width="14.969">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="Cursor" Value="Hand"/>
                                                                        <Setter Property="Padding" Value="6"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border Background="Transparent" Margin="-2" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" Uid="Border_44">
                                                                                        <Viewbox HorizontalAlignment="Center" Uid="Viewbox_4" VerticalAlignment="Center" Width="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}">
                                                                                            <Viewbox.LayoutTransform>
                                                                                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                                            </Viewbox.LayoutTransform>
                                                                                            <Canvas Height="17" Uid="Canvas_6" Width="13">
                                                                                                <Path Data="F1 M1,0 L10,0 L11,1 L11,13 L6.5,17 L4.5,17 L0,13 L0,1 L1,0 z" Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Uid="Path_13"/>
                                                                                                <Path Data="F1 M1,0 L10,0 L11,1 L11,13 L6.5,17 L4.5,17 L0,13 L0,1 L1,0 z" StrokeEndLineCap="Round" StrokeDashCap="Round" Stroke="{TemplateBinding Background}" StrokeThickness="0.75" StrokeMiterLimit="1" StrokeLineJoin="Round" Uid="Path_14">
                                                                                                    <Path.Fill>
                                                                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                            <LinearGradientBrush.RelativeTransform>
                                                                                                                <TransformGroup>
                                                                                                                    <TranslateTransform X="-0.5" Y="-0.5"/>
                                                                                                                    <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                                                                    <SkewTransform AngleY="0" AngleX="0"/>
                                                                                                                    <RotateTransform Angle="110"/>
                                                                                                                    <TranslateTransform X="0.5" Y="0.5"/>
                                                                                                                </TransformGroup>
                                                                                                            </LinearGradientBrush.RelativeTransform>
                                                                                                            <GradientStop Color="#CC999999" Offset="0.5"/>
                                                                                                            <GradientStop Color="#CCFFFFFF" Offset="0.8"/>
                                                                                                            <GradientStop Color="#CCFFFFFF" Offset="0.2"/>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Path.Fill>
                                                                                                </Path>
                                                                                            </Canvas>
                                                                                        </Viewbox>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Track.Thumb>
                                                    </Track>
                                                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Uid="TickBar_2" Visibility="Collapsed"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="TickPlacement" Value="TopLeft">
                                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="TickPlacement" Value="BottomRight">
                                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="TickPlacement" Value="Both">
                                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="1.05" ScaleX="1.05"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Opacity" Value="1"/>
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleY="1.05" ScaleX="1.05"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Slider.Style>
                    </Slider>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto" MinWidth="17.315"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" Height="0" VerticalAlignment="Top" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="0,0,-8.196,2" Grid.Row="0" HorizontalAlignment="Left" Width="226.608"/>
                    <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="Auto" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" Margin="0.315,0,0,0" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource ScrollBarStyle1}">
                        <ScrollBar.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="-1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </ScrollBar.RenderTransform>
                    </ScrollBar>
                </Grid>
            </ControlTemplate>
            <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Background" Value="#FFF0F0F0"/>
                <Setter Property="BorderBrush" Value="#FFF0F0F0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1,0"/>
                <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="True" Width="9.434" Margin="0,0,0,2.837">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="4*"/>
                                    <RowDefinition Height="21*"/>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="4*"/>
                                </Grid.RowDefinitions>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                                <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}" Background="#FFFF8B8B" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="FocusVisualStyle">
                                                <Setter.Value>
                                                    <Style>
                                                        <Setter Property="Control.Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="1"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="0" Stretch="Uniform" Height="6.935" RenderTransformOrigin="0.5,0.5" Width="4.728">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="-1"/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </RepeatButton>
                                <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageUpCommand">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageDownCommand">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsDragging" Value="True">
                                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="FocusVisualStyle">
                                                <Setter.Value>
                                                    <Style>
                                                        <Setter Property="Control.Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="1"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="0" Stretch="Uniform" Height="6.936" RenderTransformOrigin="0.5,0.5" Width="4.414">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="-1"/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="BorderThickness" Value="0,1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            <ColumnDefinition Width="1E-05*"/>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        </Grid.ColumnDefinitions>
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                        <RepeatButton x:Name="PART_LineLeftButton" Command="ScrollBar.LineLeftCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="FocusVisualStyle">
                                                        <Setter.Value>
                                                            <Style>
                                                                <Setter Property="Control.Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="1"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path x:Name="ArrowLeft" Data="M3.18,7C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7z" Fill="#FF606060" Margin="3" Stretch="Uniform"/>
                                        </RepeatButton>
                                        <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="ScrollBar.PageRightCommand">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb>
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Rectangle x:Name="rectangle" Fill="#FFCDCDCD" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="ScrollBar.LineRightCommand" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="FocusVisualStyle">
                                                        <Setter.Value>
                                                            <Style>
                                                                <Setter Property="Control.Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="1"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                        <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                            <Path x:Name="ArrowRight" Data="M1.81,7C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7z" Fill="#FF606060" Margin="3" Stretch="Uniform"/>
                                        </RepeatButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowRight" Value="White"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowLeft" Value="White"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowRight" Value="Black"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowLeft" Value="Black"/>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Fill" TargetName="ArrowLeft" Value="#FFBFBFBF"/>
                                            <Setter Property="Fill" TargetName="ArrowRight" Value="#FFBFBFBF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ButtonStyle_SaveLoad" TargetType="{x:Type Button}" BasedOn="{x:Null}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
                <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">

                            <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                            <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                            <Grid x:Name="Grid">

                                <!-- Content Presenter is where the text content etc is placed by the control -->
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="Border">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="3"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="Border">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="3"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Border">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.891"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Border">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.891"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="Border">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="2"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.SnapsToDevicePixels)" Storyboard.TargetName="Border">
                                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="#FF919191" RenderTransformOrigin="0.5,0.5" CornerRadius="3">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="2" Direction="-49" ShadowDepth="3"/>
                                    </Border.Effect>
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>

                                <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                                <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" OpacityMask="#FF320A0A" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>

                            <!--Each state sets a brush on the Border in the template -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Opacity" TargetName="Border" Value="1"/>
                                    <Setter Property="BorderBrush" TargetName="Border" Value="#FFE3EEED"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true"/>
                                <Trigger Property="IsEnabled" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LabelStyle_Name" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <TextBox x:Name="textBox" Margin="0,0,-0.583,-2.295" Style="{DynamicResource SimpleTextBox}" TextWrapping="Wrap" Text="TextBox"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <Border x:Name="Border" BorderThickness="1" Padding="0" CornerRadius="3">

                                    <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
                                    <Viewbox Margin="0">
                                        <ScrollViewer x:Name="PART_ContentHost" Style="{DynamicResource SimpleScrollViewer}" TextOptions.TextFormattingMode="Display" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" FontStretch="Expanded" Foreground="#FFFFE800"/>

                                    </Viewbox>

                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>

    </UserControl.Resources>
    <i:Interaction.Behaviors>
        <ei:MouseDragElementBehavior x:FieldModifier="public" x:Name="MouseDragBehavior"/>
    </i:Interaction.Behaviors>
    <Canvas Width="243.157">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="GroupVisualPid">
                <VisualState x:Name="ViseblePanel">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="classPID">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="classPID">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="HidePanel">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="classPID">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="classPID">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Viewbox SnapsToDevicePixels="True" Stretch="Fill" Height="284" >
            <i:Interaction.Behaviors>
                <ei:DataStateBehavior Binding="{Binding VisiblePID, ElementName=classPID, Mode=OneWay}" Value="true" TrueState="ViseblePanel" FalseState="HidePanel"/>
            </i:Interaction.Behaviors>
            <i:Interaction.Triggers>
                <i:EventTrigger>
                    <i:Interaction.Behaviors>
                        <ei:ConditionBehavior>
                            <ei:ConditionalExpression>
                                <ei:ComparisonCondition LeftOperand="{Binding VisiblePID, ElementName=classPID}" RightOperand="true" Operator="NotEqual"/>
                            </ei:ConditionalExpression>
                        </ei:ConditionBehavior>
                    </i:Interaction.Behaviors>
                    <ei:GoToStateAction StateName="HidePanel" UseTransitions="False"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Border BorderThickness="3" CornerRadius="3" Background="#FF686868" Height="299" VerticalAlignment="Top" Width="256">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="1"/>
                        <GradientStop Color="#FF093872"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Grid Margin="0,-1" HorizontalAlignment="Left" Width="250" Height="268" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Rectangle x:Name="___Rectangle_Dif_" Fill="#FFBF7171" Height="23" Margin="5.014,75.476,6.443,0" Stroke="Black" VerticalAlignment="Top" RadiusX="3" RadiusY="3"/>
                    <Button x:FieldModifier="public" x:Name="button_ResetPid" Content="Reset" HorizontalAlignment="Right" Height="21.046" Margin="0,150.68,6.443,0"  VerticalAlignment="Top" Width="31.122" Style="{DynamicResource ButtonStyle_SaveLoad}" Cursor="Arrow" Click="button_ResetPid_Click" SnapsToDevicePixels="True" ToolTip="Сбросить ПИД"/>
                    <CheckBox x:Name="checkBox_Positive" Content="" HorizontalAlignment="Left" Margin="7.428,173.523,0,0"  VerticalAlignment="Top" Width="16.056" Background="#FF919191" Foreground="Black" IsChecked="{Binding AlwaysPositive, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" Height="17.546" d:LayoutOverrides="HorizontalAlignment"/>
                    <CheckBox x:Name="checkBox_Calc" Content="" HorizontalAlignment="Left" Margin="7.428,188.454,0,0"  VerticalAlignment="Top" Background="#FF919191" IsChecked="{Binding LimitCalc, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" Width="16.056" Height="17.546" d:LayoutOverrides="HorizontalAlignment"/>
                    <!--<ArrowPointer:ucArrowPointer Height="68.35" Margin="5.014,2.063,111,0" VerticalAlignment="Top" Width="Auto"/>-->
                    <!--<ArrowPointer:ucArrowPointer HorizontalAlignment="Left" Height="51.408" Margin="5.014,2,0,0" VerticalAlignment="Top" Width="105.543" MinValue="-100" ValuePr="PID OUT" Value="-41">
                    <ArrowPointer:ucArrowPointer.LinebBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF3AFF00" Offset="0"/>
                            <GradientStop Color="Red" Offset="1"/>
                        </LinearGradientBrush>
                    </ArrowPointer:ucArrowPointer.LinebBrush>
                </ArrowPointer:ucArrowPointer>-->
                    <NumericUpDown:ucNumberOfUpDown x:Name="numDif_K" HorizontalAlignment="Left" Height="17.692" Margin="9.629,78.035,0,0" Width="44.664" VerticalAlignment="Top" Max="10" Min="-10" Step="0.01" Value="{Binding DifK, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}"/>
                    <NumericUpDown:ucNumberOfUpDown x:FieldModifier="public" x:Name="numTime_PID" Height="15" Margin="0,24.406,9.574,0" VerticalAlignment="Top" Width="47" Min="0.1" Max="999" Step="0.1"  HorizontalAlignment="Right" Value="{Binding TimePid, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=LostFocus}" Value_Changed="numTime_PID_Value_Changed" BorderBrush="#FF388F2A" ButtunColor="#FF18A8A8" />
                    <NumericUpDown:ucNumberOfUpDown x:Name="numTimeOut" HorizontalAlignment="Right" Height="15" Margin="0,40.81,9.574,0" VerticalAlignment="Top" Width="47" Max="999" Step="1"  Value="{Binding TimeOutPid, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" BorderBrush="#FFA0A0A0" BackFont="#FF6CCD79" />
                    <TextBlock x:Name="textBlock_TimePid" Height="12.594" Margin="0,24.712,48.365,0" TextWrapping="Wrap" Text="Time PID" VerticalAlignment="Top" HorizontalAlignment="Right" Width="53.197" FontSize="11"/>
                    <TextBlock x:Name="textBlock_TimeOut" Height="11.876" Margin="0,42.196,45.194,0" TextWrapping="Wrap" Text="Time ON" VerticalAlignment="Top" HorizontalAlignment="Right" Width="56.368" FontSize="10"/>
                    <TextBlock x:Name="textBlock_DifK" Height="14.984" Margin="54.293,78.771,0,0" TextWrapping="Wrap" Text="Dif.K." VerticalAlignment="Top" HorizontalAlignment="Left" Width="43.557"/>
                    <Rectangle x:Name="___Rectangle_Int_" Fill="#FF378973" Height="23" Margin="5.014,100.658,6.443,0" Stroke="Black" VerticalAlignment="Top" RadiusX="3" RadiusY="3" d:LayoutOverrides="VerticalAlignment"/>
                    <NumericUpDown:ucNumberOfUpDown x:Name="numInteg_K" HorizontalAlignment="Left" Height="17.646" Margin="9.629,103.252,0,0" Width="44.664" VerticalAlignment="Top" Max="5" Min="-5" Step="0.01" Value="{Binding IntegralK, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock x:Name="textBlock_IntK" Height="14.747" Margin="54.293,103.952,0,0" TextWrapping="Wrap" Text="Integral.K." VerticalAlignment="Top" HorizontalAlignment="Left" Width="54.848"/>
                    <Rectangle x:Name="___Rectangle_PropK_" Fill="#FF4F3FB4" Height="23" Margin="5.198,125.776,6.259,0" Stroke="Black" VerticalAlignment="Top" RadiusX="3" RadiusY="3"/>
                    <NumericUpDown:ucNumberOfUpDown x:Name="numProp_K" HorizontalAlignment="Left" Height="17.646" Margin="9.629,128.371,0,0" Width="44.664" VerticalAlignment="Top" Max="5" Min="-5" Step="0.01" Value="{Binding PropK, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock x:Name="textPropK" Height="16.912" Margin="54.293,129.071,0,0" TextWrapping="Wrap" Text="Prop.K." VerticalAlignment="Top" HorizontalAlignment="Left" Width="43.557"/>
                    <Button x:Name="button_close" Content="" HorizontalAlignment="Right" Height="17" Margin="0,3.261,3.101,0" VerticalAlignment="Top" Width="17" Style="{DynamicResource ButtonStyle_SaveLoad}" Click="button_Click" BorderThickness="1" IsCancel="True" IsDefault="True" ToolTip="Закрыть окно">
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="/LibraryMySCADA;component/DictionaryLibrarySCADA.xaml"/>
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                        <Button.BorderBrush>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFCCCCCC" Offset="0"/>
                                <GradientStop Color="#FF4B4B4B" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.BorderBrush>
                        <Button.Background>
                            <ImageBrush ImageSource="close_517bada266da7.png" Stretch="Uniform"/>
                        </Button.Background>
                    </Button>
                    <Label x:Name="label_Dif_K" Content="{Binding Dif_Work, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" Margin="117.745,78.358,0,0" Style="{DynamicResource LabelStyle_time}" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="106.847" VerticalAlignment="Top" Height="17.236" Cursor="" Background="#FFD45D68">
                        <Label.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="#FF767070" Offset="1"/>
                            </LinearGradientBrush>
                        </Label.BorderBrush>
                    </Label>
                    <Label x:Name="label_Integ_K" Content="{Binding Integral_Work, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" Margin="117.745,103.539,0,0" Style="{DynamicResource LabelStyle_time}" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="106.847" VerticalAlignment="Top" Height="17.237" Cursor="" Background="#FF54B898">
                        <Label.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="#FF767070" Offset="1"/>
                            </LinearGradientBrush>
                        </Label.BorderBrush>
                    </Label>
                    <Label x:Name="label_Prop_K" Content="{Binding Prop_Work, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" Margin="117.745,128.658,0,0" Style="{DynamicResource LabelStyle_time}" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="106.847" VerticalAlignment="Top" Height="17.237" Cursor="" Background="#FF6D5DD4">
                        <Label.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="#FF767070" Offset="1"/>
                            </LinearGradientBrush>
                        </Label.BorderBrush>
                    </Label>
                    <!--<UserSymvol:numericUpDown x:Name="numMaxPid" HorizontalAlignment="Left" Height="18.912" Margin="15.628,0,0,34.832" Width="56.328" VerticalAlignment="Bottom" Max="100" Min="-100" Step="1"/>
                <UserSymvol:numericUpDown x:Name="numMinPid" HorizontalAlignment="Left" Height="18.912" Margin="15.628,0,0,10.92" Width="56.328" VerticalAlignment="Bottom" Max="100" Min="-100" Step="1"/>-->
                    <ArrowPointer:ucArrowPointer x:Name="PidArrow" Height="Auto" Width="Auto" Margin="2,1.877,109.491,0" VerticalAlignment="Top" MaxValue="{Binding MaxPID, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" ValuePr="PID" MinValue="{Binding MinPID, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" ToolTip="Значение выхода ПИД" visualMinMax="True" Foreground="#FF5ED38E">
                        <ArrowPointer:ucArrowPointer.LinebBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF23FF00" Offset="0"/>
                                <GradientStop Color="#FFFB0A0A" Offset="1"/>
                            </LinearGradientBrush>
                        </ArrowPointer:ucArrowPointer.LinebBrush>
                    </ArrowPointer:ucArrowPointer>
                    <FlowDocumentScrollViewer x:Name="flowDocument" Height="60" Margin="5.014,0,6.259,-22" VerticalAlignment="Bottom" FontSize="9.333" BorderBrush="Black" BorderThickness="1" IsSelectionEnabled="False" Template="{DynamicResource FlowDocumentScrollViewerControlTemplate1}" IsToolBarVisible="True" OverridesDefaultStyle="True" ToolTip="Лог">
                        <FlowDocument Background="#FF686868" FontSize="7" FontFamily="Arial">
                            <Paragraph Foreground="#FFD4D4D4">
                                <Run Text="PID Value"/>
                            </Paragraph>
                        </FlowDocument>
                    </FlowDocumentScrollViewer>
                    <Button x:Name="button_File_Open" Content="" HorizontalAlignment="Right" Height="13.03" Margin="0,4.314,80.271,0" VerticalAlignment="Top" Width="13.741" Click="button_File_Open_Click" VerticalContentAlignment="Bottom" Padding="1,6,1,1" FontSize="8" Style="{DynamicResource ButtonStyle_SaveLoad}" ToolTip="Загрузить сохраненный ПИД">
                        <Button.Background>
                            <ImageBrush ImageSource="load.png" Stretch="Uniform"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="button_File_Save" Content="" HorizontalAlignment="Right" Height="13.03" Margin="0,4.314,63.443,0" VerticalAlignment="Top" Width="13.741" Click="button_File_Save_Click" BorderThickness="1" Style="{DynamicResource ButtonStyle_SaveLoad}" ToolTip="Cохранить ПИД">
                        <Button.Background>
                            <ImageBrush ImageSource="save.png" Stretch="Uniform"/>
                        </Button.Background>
                    </Button>
                    <Rectangle x:Name="___Rectangle_PropK__Copy" Fill="#FF858585" Height="21.046" Margin="6.309,150.68,41.086,0" Stroke="Black" VerticalAlignment="Top" RadiusX="3" RadiusY="3"/>
                    <TextBlock x:Name="textBlock_SetPoint" Height="14.747" Margin="39.238,0,0,99.477" TextWrapping="Wrap" Text="{Binding PidSetpoint, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ucPid}}}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="54.848" ToolTip="Уставка ПИД"/>
                    <TextBlock x:Name="textBlock_BackOS" Height="14.747" Margin="0,0,61.482,99.477" TextWrapping="Wrap" Text="{Binding PidOS, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ucPid}}}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="54.848" ToolTip="Обратная связь ПИД"/>
                    <TextBlock x:Name="textBlock_DifK_Copy" Height="12.731" Margin="12.031,0,0,101.493" TextWrapping="Wrap" Text="US:" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="22.207" ToolTip="Уставка ПИД"/>
                    <TextBlock x:Name="textBlock_DifK_Copy1" Height="12.731" Margin="111.463,0,121.33,101.712" TextWrapping="Wrap" Text="OS:" VerticalAlignment="Bottom" ToolTip="Обратная связь ПИД"/>
                    <CheckBox x:Name="checkBox_Positive_Copy" Content="" HorizontalAlignment="Left" Margin="225.596,79.426,0,0"  VerticalAlignment="Top" Background="#FF919191" Foreground="Black" d:LayoutOverrides="VerticalAlignment" Width="15.532" IsChecked="{Binding on_DifK, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" ToolTip="Включить, выключить компонент ПИД"/>
                    <CheckBox x:Name="checkBox_Positive_Copy1" Content="" HorizontalAlignment="Left" Margin="225.596,104.608,0,0"  VerticalAlignment="Top" Background="#FF919191" Foreground="Black" Width="15.532" d:LayoutOverrides="VerticalAlignment" IsChecked="{Binding on_IntegK, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" ToolTip="Включить, выключить компонент ПИД"/>
                    <CheckBox x:Name="checkBox_Positive_Copy2" Content="" HorizontalAlignment="Left" Margin="225.596,129.727,0,0"  VerticalAlignment="Top" Background="#FF919191" Foreground="Black" Width="15.532" IsChecked="{Binding on_PropK, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" ToolTip="Включить, выключить компонент ПИД"/>
                    <TextBox x:Name="textBox_Name" HorizontalAlignment="Right" Height="24.274" Margin="0,0,6.259,67" Style="{DynamicResource TextBoxStyle1}" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Bottom" Width="86.667" Background="#FF686868" Foreground="#FFF1F1F1" UndoLimit="0" AllowDrop="False" Focusable="False" IsHitTestVisible="False" IsTabStop="False"/>
                    <Label x:Name="label" Content="Всегда положительный" Height="14.343" Margin="23.484,0,92.926,80.134" VerticalAlignment="Bottom" Padding="0"/>
                    <Label x:Name="label_Copy" Content="Ограничивать расчет" Height="17.95" Margin="23.484,0,92.926,62" VerticalAlignment="Bottom" Padding="0"/>
                    <NumericUpDown:ucNumberOfUpDown x:Name="numStartPoint" HorizontalAlignment="Left" Height="17.95" Margin="9.629,207.05,0,0" Width="44.664" VerticalAlignment="Top" Max="1000" Min="-1000" BorderBrush="#FF8BA051" Value="{Binding StarPoint, ElementName=classPID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label x:Name="label_Copy1" Content="начальное значение ПИД" Height="17.95" Margin="59.293,0,34.559,43" VerticalAlignment="Bottom" Padding="0"/>
                    <NumericUpDown:ucNumberOfUpDown x:Name="numTimeOutOff" HorizontalAlignment="Right" Height="15" Margin="0,57.39,9.574,0" VerticalAlignment="Top" Width="47" Max="999" Step="1"  Value="{Binding TimeOutPidOff, Mode=TwoWay, Source={StaticResource _Pid}, UpdateSourceTrigger=PropertyChanged}" BorderBrush="#FFA0A0A0" BackFont="#FFC16549" />
                    <TextBlock x:Name="textBlock_TimeOut_Copy" Height="11.876" Margin="0,58.776,45.194,0" TextWrapping="Wrap" Text="Time OFF" VerticalAlignment="Top" HorizontalAlignment="Right" Width="56.368" FontSize="10"/>
                    <Rectangle x:Name="recLimitPidOn" Fill="#FFE00F05" HorizontalAlignment="Left" Height="10.438" Margin="146.285,192.866,0,0" Stroke="Black" VerticalAlignment="Top" Width="10.789" RadiusY="4.577" RadiusX="4.577" Visibility="{Binding LimitPidOnMax, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=classPID}"/>
                    <Rectangle x:Name="recLimitPidOnMin" Fill="#FF86E005" HorizontalAlignment="Left" Height="10.438" Margin="146.285,192.866,0,0" Stroke="Black" VerticalAlignment="Top" Width="10.789" RadiusY="4.577" RadiusX="4.577" Visibility="{Binding LimitPidOnMin, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=classPID}"/>
                    <Button x:Name="buttonHotIce" Content="" HorizontalAlignment="Left" Height="24" Margin="217.452,203.03,0,0" VerticalAlignment="Top" Width="24.375" Style="{DynamicResource ButtonStyle_SaveLoad}" Click="buttonHotIce_Click" ToolTip="Режим работы - охлаждение, нагрев.">
                        <i:Interaction.Triggers>
                            <ei:DataTrigger Value="false" Binding="{Binding CoolingHeat, ElementName=classPID}">
                                <ei:ChangePropertyAction x:Name="ChangePropertyActionToHot" TargetName="button" TargetObject="{Binding ElementName=buttonHotIce}" PropertyName="Background">
                                    <ei:ChangePropertyAction.Value>
                                        <ImageBrush ImageSource="leto.png"/>
                                    </ei:ChangePropertyAction.Value>
                                </ei:ChangePropertyAction>
                            </ei:DataTrigger>
                            <ei:DataTrigger Value="true" Binding="{Binding CoolingHeat, ElementName=classPID}">
                                <ei:ChangePropertyAction x:Name="ChangePropertyActionToIce" TargetName="button" TargetObject="{Binding ElementName=buttonHotIce}" PropertyName="Background">
                                    <ei:ChangePropertyAction.Value>
                                        <ImageBrush ImageSource="zima.png"/>
                                    </ei:ChangePropertyAction.Value>
                                </ei:ChangePropertyAction>
                            </ei:DataTrigger>
                        </i:Interaction.Triggers>
                        <Button.Background>
                            <ImageBrush ImageSource="leto.png"/>
                        </Button.Background>
                    </Button>
                    <Button x:Name="ButtonClearText" Content="" Margin="234.715,283.54,1.452,-25.207" Style="{DynamicResource ButtonStyle1}" Background="#FFC0C90F" Click="ButtonClearText_Click"/>
                </Grid>
            </Border>
        </Viewbox>
    </Canvas>
</y:ClassVirtualAdd>
