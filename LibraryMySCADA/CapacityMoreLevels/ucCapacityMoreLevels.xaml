<y:ClassVirtualAdd x:Name="CapacityMoreLevels" x:Class="LibraryMySCADA.CapacityMoreLevels.ucCapacityMoreLevels"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LibraryMySCADA.CapacityMoreLevels"
             xmlns:y ="clr-namespace:LibraryMySCADA.Virt"
             mc:Ignorable="d" Height="253" Width="160" Loaded="CapacityMoreLevels_Loaded" SizeChanged="CapacityMoreLevels_SizeChanged">
    <UserControl.Resources>
        <Point x:Key="Point1">0,1</Point>
        <LinearGradientBrush x:Key="BrushFillCapacity" EndPoint="{DynamicResource Point1}" StartPoint="0,1">
            <GradientStop Color="#FF6A91D6" Offset="0.478"/>
            <GradientStop Color="#FFB0A883" Offset="0.567"/>
        </LinearGradientBrush>

        <!--Simple Simple SliderThumb - The Thumb is the draggable part of a Slider-->
        <Style x:Key="SimpleSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Width" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Margin="1,3.833,0.333,3.833" HorizontalAlignment="Stretch">
                            <Path Data="M7.3020628,-6.6634896 L-3.0577996,20.684168 7.1906664,15.654451 17.884718,20.683744 z" Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Height="Auto" Margin="10.75,-10.771,12.167,-11.75" Stretch="Fill" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="1" VerticalAlignment="Stretch"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Simple Simple Slider
    Similiar to ScrollBar this template uses Track to layout the draggable Thumb which has an up and down repeat button
    It uses Simple SliderThumb and SimpleScrollRepeatButtonStyle for the page up and down repeat buttons -->
        <Style x:Key="SimpleSlider2" TargetType="{x:Type Slider}">
            <Setter Property="Background" Value="{DynamicResource LightBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid x:Name="GridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="14"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- TickBar shows the ticks for Slider -->
                            <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}" Grid.RowSpan="2" VerticalAlignment="Top" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>

                            <!-- The Track lays out the repeat buttons and thumb -->
                            <Track Grid.Row="1" x:Name="PART_Track" OpacityMask="Black" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource SimpleSliderThumb}" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" Margin="4,0,41,0" Width="Auto"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight"/>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>

                            <!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <!-- Track rotates itself based on orientation so need to force it back -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Slider}" x:Key="SliderStyle1">
            <Setter Property="Background" Value="{DynamicResource LightBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid x:Name="GridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="thumb">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.772"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="thumb">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.772"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <!-- The Track lays out the repeat buttons and thumb -->
                            <Track Grid.Row="0" x:Name="PART_Track" Orientation="Vertical" AutomationProperties.IsOffscreenBehavior="Onscreen" Grid.IsSharedSizeScope="True" ScrollViewer.CanContentScroll="True" UseLayoutRounding="False" Margin="-16,0">
                                <Track.Thumb>
                                    <Thumb x:Name="thumb" Style="{DynamicResource SimpleSliderThumb}" VerticalAlignment="Center" Height="5" HorizontalAlignment="Center" Width="37" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="0" IsTabStop="False" OverridesDefaultStyle="False" AutomationProperties.IsOffscreenBehavior="Onscreen" Foreground="#FF8D5A5A" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="#FF993A3A" RenderTransformOrigin="0.5,0.5">
                                        <Thumb.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Thumb.RenderTransform>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft"/>
                            <Trigger Property="TickPlacement" Value="BottomRight"/>
                            <Trigger Property="TickPlacement" Value="Both"/>
                            <Trigger Property="IsEnabled" Value="false"/>

                            <!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <!-- Track rotates itself based on orientation so need to force it back -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ThumbStyle1"  TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Width" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Margin="0,0,-16,-21">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="path">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#FF877E7E"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="path">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#FFA09C9C"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="path" Data="M0.0021113799,7.125 L13.5,3.125 C11.124,5.62311 10.946532,8.2744989 13.625,11.125 z" HorizontalAlignment="Stretch" Height="Auto" Stretch="Fill" StrokeThickness="0.5" VerticalAlignment="Stretch" Width="Auto" RenderTransformOrigin="0.5,0.5" Margin="-7.8,2.9" Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyle_maxValue" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Viewbox Stretch="Fill">
                            <Border SnapsToDevicePixels="True" Height="13" Width="37" BorderThickness="0.5" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="1"/>
                                        <GradientStop Color="#FFA0A0A0"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="Auto" VerticalAlignment="Stretch" Margin="3,-2,0,0" HorizontalAlignment="Center"/>
                            </Border>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border SnapsToDevicePixels="True" Height="Auto" Width="Auto" BorderThickness="0.5" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="1"/>
                                    <GradientStop Color="#FFA0A0A0"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid Margin="0,0,0,6">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Rectangle x:Name="rectWater" Stroke="Black" RadiusY="9.5" RadiusX="9.5" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" Fill="{DynamicResource BrushFillCapacity}"/>
        <Path x:Name="pathD" Data="M135,75 L5,75" Height="3" Margin="5,72,5,0" Stretch="Fill" Stroke="{Binding Background, ElementName=sliderD}" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" StrokeThickness="2" StrokeDashArray="1 0.5">
            <Path.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Path.RenderTransform>
        </Path>
        <Path x:Name="pathC" Data="M135,75 L5,75" Margin="5,122" Stretch="Fill" Stroke="{Binding Background, ElementName=sliderC}" RenderTransformOrigin="0.5,0.5" StrokeThickness="2" StrokeDashArray="1 0.5" VerticalAlignment="Top">
            <Path.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Path.RenderTransform>
        </Path>
        <Path x:Name="pathB" Data="M135,75 L5,75" Margin="5,169,5,0" Stretch="Fill" Stroke="{Binding Background, ElementName=sliderB}" RenderTransformOrigin="0.5,0.5" StrokeThickness="2" StrokeDashArray="1 0.5" Height="3" VerticalAlignment="Top">
            <Path.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Path.RenderTransform>
        </Path>
        <Path x:Name="pathA" Data="M135,75 L5,75" Margin="5,206,5,0" Stretch="Fill" Stroke="{Binding Background, ElementName=sliderA}" RenderTransformOrigin="0.5,0.5" StrokeThickness="2" StrokeDashArray="1 0.5" Height="3" VerticalAlignment="Top">
            <Path.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Path.RenderTransform>
        </Path>
        <Slider x:Name="sliderA" Style="{DynamicResource SliderStyle1}" Orientation="Vertical" Grid.Column="1" SnapsToDevicePixels="True" Width="47" Margin="-25,0,-10,0" Value="{Binding LevelA, ElementName=CapacityMoreLevels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="0" Background="#FF35C100" Foreground="#FFC92A2A" Maximum="100" ValueChanged="sliderA_ValueChanged" HorizontalAlignment="Left">
            <Slider.BorderBrush>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFCCCCCC" Offset="0"/>
                    <GradientStop Color="#FFB92E2E" Offset="1"/>
                </LinearGradientBrush>
            </Slider.BorderBrush>
        </Slider>
        <Slider x:Name="sliderB" Style="{DynamicResource SliderStyle1}" Maximum="100" Orientation="Vertical" Grid.Column="1" SnapsToDevicePixels="True" Width="50" Margin="-33,0,-5,0" Value="{Binding LevelB, ElementName=CapacityMoreLevels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="0" Background="#FFE7F03A" ValueChanged="sliderB_ValueChanged" HorizontalAlignment="Left"/>
        <Slider x:Name="sliderC" Style="{DynamicResource SliderStyle1}" Maximum="100" Orientation="Vertical" Grid.Column="1" SnapsToDevicePixels="True" Width="47" Margin="-25,0,-10,0" Value="{Binding LevelC, ElementName=CapacityMoreLevels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="0" Background="#FF0008AC" ValueChanged="sliderC_ValueChanged" HorizontalAlignment="Left"/>
        <Slider x:Name="sliderD" Style="{DynamicResource SliderStyle1}" Maximum="100" Orientation="Vertical" Grid.Column="1" SnapsToDevicePixels="True" Width="50" Margin="-33,0,-5,0" Value="{Binding LevelD, ElementName=CapacityMoreLevels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="0" Background="#FFE80000" Interval="1" ValueChanged="sliderD_ValueChanged" HorizontalAlignment="Left"/>
        <Viewbox Margin="50,5,50.186,0" Height="30" VerticalAlignment="Top">
            <Label x:Name="label_maxValue" Style="{DynamicResource LabelStyle1}" RenderTransformOrigin="1.071,-1.077" BorderThickness="0" Content="0m" Height="16.667" Width="26.877"/>
        </Viewbox>
        <Viewbox x:Name="Viewbox_A" Height="20" Width="30" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,184,0,0" Stretch="Fill">
            <Label x:Name="label_A" Style="{DynamicResource LabelStyle1}" RenderTransformOrigin="1.071,-1.077" BorderThickness="0" Content="0m" Height="20" Width="30"/>
        </Viewbox>
        <Viewbox x:Name="Viewbox_B" Height="20" VerticalAlignment="Top" Margin="40,148,0,0" Stretch="Fill" Width="30" HorizontalAlignment="Left">
            <Label x:Name="label_B" Style="{DynamicResource LabelStyle1}" RenderTransformOrigin="1.071,-1.077" BorderThickness="0" Content="0m" Height="20" Width="30"/>
        </Viewbox>
        <Viewbox x:Name="Viewbox_C" Height="20" VerticalAlignment="Top" Margin="0,101,33,0" Stretch="Fill" Width="30" HorizontalAlignment="Right" d:LayoutOverrides="Width">
            <Label x:Name="label_C" Style="{DynamicResource LabelStyle1}" RenderTransformOrigin="1.071,-1.077" BorderThickness="0" Content="0m" Height="20" Width="30"/>
        </Viewbox>
        <Viewbox x:Name="Viewbox_D" Height="20" VerticalAlignment="Top" Margin="0,51,3,0" Stretch="Fill" HorizontalAlignment="Right" Width="30">
            <Label x:Name="label_D" Style="{DynamicResource LabelStyle1}" RenderTransformOrigin="1.071,-1.077" BorderThickness="0" Content="0m" Height="20" Width="30" Margin="0,1,0,0"/>
        </Viewbox>
    </Grid>
</y:ClassVirtualAdd>
