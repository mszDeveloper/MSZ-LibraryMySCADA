<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LibraryMySCADA.CapacityAllLevele"
             xmlns:LibraryMySCADA="clr-namespace:LibraryMySCADA" x:Name="userControl" x:Class="LibraryMySCADA.CapacityAllLevele.CapacityAnyAmountLevels"
             mc:Ignorable="d" Width="224.833" Height="293.167" Loaded="UserControl_Loaded" BorderBrush="#FFF01313">
    <UserControl.Resources>
        <Point x:Key="Point1">0,1</Point>
        <LinearGradientBrush x:Key="BrushFill" EndPoint="{DynamicResource Point1}" StartPoint="0,1">
            <GradientStop Color="{Binding CapacityFillColor, ElementName=userControl}" Offset="0.5"/>
            <GradientStop Offset="0.5" Color="{Binding CapacityNoFillColor, ElementName=userControl}"/>
        </LinearGradientBrush>

        <!--Simple Simple SliderThumb - The Thumb is the draggable part of a Slider-->
        <Style x:Key="SimpleSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Width" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Margin="1,3.833,0.333,3.833" HorizontalAlignment="Stretch">
                            <Path Data="M7.3020628,-6.6634896 L-3.0577996,20.684168 7.1906664,15.654451 17.884718,20.683744 z" Fill="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Height="Auto" Margin="10.75,-10.771,12.167,-11.75" Stretch="Fill" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="1" VerticalAlignment="Stretch"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Slider}" x:Key="SliderStyle1">
            <Setter Property="Background" Value="{DynamicResource LightBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid x:Name="GridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="thumb">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.772"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="thumb">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.772"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <!-- The Track lays out the repeat buttons and thumb -->
                            <Track Grid.Row="0" x:Name="PART_Track" Orientation="Vertical" AutomationProperties.IsOffscreenBehavior="Onscreen" Grid.IsSharedSizeScope="True" ScrollViewer.CanContentScroll="True" UseLayoutRounding="False" Margin="-16,0">
                                <Track.Thumb>
                                    <Thumb x:Name="thumb" Style="{DynamicResource SimpleSliderThumb}" VerticalAlignment="Center" Height="5" HorizontalAlignment="Center" Width="37" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="0" IsTabStop="False" OverridesDefaultStyle="False" AutomationProperties.IsOffscreenBehavior="Onscreen" Foreground="#FF8D5A5A" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="#FF993A3A" RenderTransformOrigin="0.5,0.5">
                                        <Thumb.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Thumb.RenderTransform>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft"/>
                            <Trigger Property="TickPlacement" Value="BottomRight"/>
                            <Trigger Property="TickPlacement" Value="Both"/>
                            <Trigger Property="IsEnabled" Value="false"/>

                            <!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="GridRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <!-- Track rotates itself based on orientation so need to force it back -->
                                <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.Background>
        <ImageBrush/>
    </UserControl.Background>
    <Grid Margin="1,1,28,1">
        <Border x:Name="borderImg" CornerRadius="{Binding CornerRadius, ElementName=border}">
            <Border.Background>
                <ImageBrush ImageSource="{Binding imgFill, ElementName=userControl}"/>
            </Border.Background>
        </Border>
        <Border x:Name="border" Background="{Binding Mode=OneWay, Source={StaticResource BrushFill}}" BorderThickness="1" CornerRadius="60" BorderBrush="{Binding BorderBrush, ElementName=userControl}"/>
        <Grid x:Name="rootGrid">
            <Canvas x:Name="CanvasValue" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                <Label x:Name="labelValue" FontSize="{Binding fontSize, ElementName=userControl}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0" Style="{DynamicResource LabelStyle1}" Background="#FFCFCFCF" BorderBrush="Black" Padding="0" BorderThickness="1"/>
            </Canvas>
            <Label x:Name="LabelHeader" HorizontalAlignment="Center" VerticalAlignment="Top" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{DynamicResource LabelStyle1}" Background="#FFD89D9D" Height="16.293" Visibility="{Binding showHead, ElementName=userControl}" FontSize="14" Padding="1">
                <Label.Resources>
                    <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Label}">
                                    <Border SnapsToDevicePixels="true" Padding="2" Margin="0,0,0,-0.333" Background="#FFBFBFBF" CornerRadius="4" BorderThickness="1">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Black" Offset="1"/>
                                                <GradientStop Color="#FFE2C0C0"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="20.544" Margin="0,-4.334,0,-5.584"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Label.Resources>
                <Label.Effect>
                    <DropShadowEffect/>
                </Label.Effect>
            </Label>
            <Label Content="Label" HorizontalAlignment="Left" Height="27" Margin="67,230,0,0" VerticalAlignment="Top" Width="93"/>
        </Grid>
        <WrapPanel Orientation="Vertical" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,12">
            <Label x:Name="LabelCurrentLevel" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{DynamicResource LabelStyle1}" Background="#FFD89D9D" Visibility="{Binding showHead, ElementName=userControl}" FontSize="14" Padding="1" VerticalAlignment="Bottom" Content="3444" HorizontalAlignment="Center">
                <Label.Resources>
                    <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Label}">
                                    <Border SnapsToDevicePixels="true" Padding="2" Margin="0,0,0,-0.333" Background="#FFBFBFBF" CornerRadius="4" BorderThickness="1">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Black" Offset="1"/>
                                                <GradientStop Color="#FFE2C0C0"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="20.544" Margin="0,-4.334,0,-5.584"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Label.Resources>
                <Label.Effect>
                    <DropShadowEffect/>
                </Label.Effect>
            </Label>
        </WrapPanel>
    </Grid>
</UserControl>
