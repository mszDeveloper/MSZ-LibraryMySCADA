<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LibraryMySCADA.Flowmeter"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:LibraryMySCADA="clr-namespace:LibraryMySCADA" xmlns:CounterNumericAnim="clr-namespace:LibraryMySCADA.CounterNumericAnim" x:Name="userControl" x:Class="LibraryMySCADA.Flowmeter.FlowMeterControl"
             mc:Ignorable="d" Height="125.959" Width="243.667" HorizontalAlignment="Left" VerticalAlignment="Top" Loaded="userControl_Loaded">
    <UserControl.Resources>
        <Style TargetType="{x:Type local:FlowMeterControl}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Panel.ZIndex" Value="1" />
                </Trigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="-0.5,-0.517" CornerRadius="8" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border.Effect>
                                <DropShadowEffect/>
                            </Border.Effect>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="5"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="3"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.929"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.929"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Width="Auto" Margin="4.094,4.2,3.894,4.2">
                                <Path Data="M0.50000001,12.999999 L12.75,0.50000036 M0.50000004,0.5 L12.75,12.917" Fill="#FFF4F4F5" HorizontalAlignment="Stretch" Height="Auto" Margin="-0.5,-0.491,-0.55,-0.491" Stretch="Fill" Stroke="Black" VerticalAlignment="Stretch" Width="Auto" StrokeThickness="3" StrokeDashCap="Square" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyleEnter" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="3">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="161*"/>
                                    <ColumnDefinition Width="64*"/>
                                </Grid.ColumnDefinitions>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled" Margin="0,0.391,1.095,0.391" Padding="0,-5,0,0" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" AllowDrop="False"/>
                                <Button x:Name="ButtonEnter" Content="OK" HorizontalAlignment="Left" VerticalAlignment="Top" Width="58.834" Margin="2.832,3.034,0,0" Height="36.598" BorderThickness="1" Padding="1,-9,1,1" Grid.Column="1" Style="{DynamicResource ButtonStyleOK}" Click="ButtonEnter_Click"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleOK" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <i:Interaction.Behaviors>
        <ei:MouseDragElementBehavior ConstrainToParentBounds="True"/>
    </i:Interaction.Behaviors>
    <Grid>
        <i:Interaction.Behaviors>
            <ei:DataStateBehavior Binding="{Binding VisiblePanel, ElementName=userControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="true" TrueState="Visible" FalseState="Hide"/>
        </i:Interaction.Behaviors>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="FlowMeter">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Visible">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="userControl">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="userControl">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Hide">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="userControl">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="userControl">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Rectangle Fill="#FFF4F4F5" Stroke="Black" RadiusY="9.5" RadiusX="9.5"/>
        <Canvas HorizontalAlignment="Center" Width="{Binding ActualWidth, ElementName=LabelTitle}" Height="16.625" VerticalAlignment="Top" Margin="0,-8,0,0">
            <Label x:Name="LabelTitle" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="5,0,5,5" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{DynamicResource LabelStyle1}" Background="#FFD89D9D" Content="Расходомер">
                <Label.Resources>
                    <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Label}">
                                    <Border SnapsToDevicePixels="true" Padding="2" Margin="0,0,0,-0.333" Background="#FFBFBFBF" CornerRadius="4" BorderThickness="1">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Black" Offset="1"/>
                                                <GradientStop Color="#FFE2C0C0"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="20.544" Margin="0,-4.334,0,-5.584"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Label.Resources>
                <Label.Effect>
                    <DropShadowEffect/>
                </Label.Effect>
            </Label>

        </Canvas>
        <Button x:Name="buttonHide" Content="Button" Height="16.532" VerticalAlignment="Top" Width="16" Style="{DynamicResource ButtonStyle1}" HorizontalAlignment="Right" Margin="0,-7.933,13,0" Click="buttonHide_Click"/>
        <Viewbox HorizontalAlignment="Center" Height="41.839" VerticalAlignment="Center" Width="193.5" Stretch="Fill" Margin="25.084,27.766,25.083,56.354">

            <CounterNumericAnim:CounterNumericAnim x:Name="CommonFlowMeter" NumbersCout="7" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="53.333" Width="205.654"/>

        </Viewbox>
        <TextBlock HorizontalAlignment="Center" Height="19.141" TextWrapping="Wrap" Text="Общий счётчик" VerticalAlignment="Center" Width="104.001" Margin="77.166,8.625,62.5,98.193" FontSize="14"/>
        <TextBlock HorizontalAlignment="Center" Height="19.141" TextWrapping="Wrap" VerticalAlignment="Center" Width="120.668" FontSize="14" Margin="61.5,69.605,61.499,37.213"><Run Text="Суточный"/><Run Text=" счётчик"/></TextBlock>
        <Viewbox HorizontalAlignment="Center" Height="32.213" VerticalAlignment="Top" Width="109.833" Stretch="Fill" Margin="66.917,88.746,66.917,0">
            <CounterNumericAnim:CounterNumericAnim x:Name="DailyFlowMeter" Height="52.213" Width="147.833" ValueCounter="{Binding DailyCounter, ElementName=userControl}"/>

        </Viewbox>
        <TextBlock HorizontalAlignment="Center" Height="13.141" TextWrapping="Wrap" VerticalAlignment="Center" Width="39.5" FontSize="11" Margin="10.75,81.496,193.417,31.322"><Run Text="m3/"/><Run Text="час"/></TextBlock>
        <TextBlock HorizontalAlignment="Center" Height="13.141" TextWrapping="Wrap" VerticalAlignment="Center" Width="41.5" FontSize="11" Margin="192,81.496,10.167,31.322"><Run Text="m3/"/><Run Text="мин"/><LineBreak/><Run/></TextBlock>
        <TextBlock x:Name="timeText" HorizontalAlignment="Center" Height="13.141" TextWrapping="Wrap" VerticalAlignment="Center" Width="51.166" FontSize="11" Margin="10.75,9.625,181.751,103.193"><Run Text="0"/><Run Text="0:00:00"/></TextBlock>
        <TextBlock x:Name="hourCount" HorizontalAlignment="Center" Height="19.141" TextWrapping="Wrap" VerticalAlignment="Center" Width="39.5" FontSize="16" Margin="10.75,96.818,193.417,10" Text="0"/>
        <TextBlock x:Name="secondCount" HorizontalAlignment="Center" Height="19.141" TextWrapping="Wrap" VerticalAlignment="Center" Width="39.5" FontSize="16" Margin="194.167,96.818,10,10" Text="0"/>
        <Button x:Name="rButton" x:FieldModifier="public" Content="R" Height="19.708" Margin="0,40.783,5.25,0" VerticalAlignment="Top" Click="rButton_Click" HorizontalAlignment="Right" Width="15.333"/>
        <TextBox x:Name="textBoxEnterValue" HorizontalAlignment="Left" Height="44.666" Margin="8.666,26.001,0,0" TextWrapping="Wrap" Text="156123" VerticalAlignment="Top" Width="226.667" FontSize="36" Style="{DynamicResource TextBoxStyleEnter}" Padding="0,-6,0,0" IsTabStop="False" UndoLimit="10" IsUndoEnabled="False" MaxLines="1" MaxLength="7" VerticalScrollBarVisibility="Disabled" Visibility="Collapsed"/>

    </Grid>
</UserControl>
