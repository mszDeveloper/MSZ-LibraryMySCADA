<y:ClassVirtualAdd
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ArrowPointer="clr-namespace:wpfLibMszControl.ArrowPointer"
            
    xmlns:local="clr-namespace:LibraryMySCADA" 
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:Pid="clr-namespace:wpfMszControl.Pid" 
    x:Name="ucDriverDirection"
             x:Class="LibraryMySCADA.Driver.ucDriver"
             xmlns:y="clr-namespace:LibraryMySCADA.Virt"
             mc:Ignorable="d" Height="65" Width="66" UseLayoutRounding="True" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="True" ToolTip="{Binding ToolTipText, ElementName=ucDriverDirection}" Loaded="ucDriverDirection_Loaded">
    
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Storyboard x:Key="OnMouseEnter1">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ucUGO_DRIVERControl">
                <EasingColorKeyFrame KeyTime="0" Value="#FFC3C3C3"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OnMouseLeave1">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ucUGO_DRIVERControl">
                <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseUp" SourceName="ucUGO_DRIVERControl" SourceObject="{Binding ElementName=ucUGO_DRIVERControl}">
            <ei:GoToStateAction x:Name="GoToStateActionPanelVisible" TargetObject="{Binding ElementName=ucDriverDirection}" StateName="SettingPanel_Visible" IsEnabled="False"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Click" SourceName="buttonPID" SourceObject="{Binding ElementName=buttonPID}">
            <ei:GoToStateAction StateName="PidPanelVisible" TargetObject="{Binding ElementName=ucDriverDirection}"/>
        </i:EventTrigger>
        <i:EventTrigger SourceName="ucPid" SourceObject="{Binding ElementName=ucPid}" EventName="Hide_Event">
            <ei:GoToStateAction StateName="PidPanelHide" TargetObject="{Binding ElementName=ucDriverDirection}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>


    <Grid x:Name="grid" ScrollViewer.VerticalScrollBarVisibility="Disabled">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="SettingPanel">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="SettingPanel_Visible">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="grid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Center}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="grid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0.032"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0.032"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CanvasSetting">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="SettingPanel_Hid">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="border">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.032"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.032"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CanvasSetting">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="CanvasSetting">
                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.2" Value="True"/>
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="PidPanel">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="PidPanelVisible">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ucPid">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.IsSharedSizeScope)" Storyboard.TargetName="ucPid">
                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.3" Value="False"/>
                        </BooleanAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ucPid">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="PidPanelHide">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ucPid">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ucPid">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <local:ucUGO_DRIVERControl x:Name="ucUGO_DRIVERControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#00000000">
            <local:ucUGO_DRIVERControl.LayoutTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="{Binding angleUGO, ElementName=ucDriverDirection}"/>
                    <TranslateTransform/>
                </TransformGroup>
            </local:ucUGO_DRIVERControl.LayoutTransform>
        </local:ucUGO_DRIVERControl>
        <Canvas x:Name="CanvasSetting" HorizontalAlignment="Left" Height="136" Margin="0" VerticalAlignment="Top" Width="304" IsVisibleChanged="CanvasSetting_IsVisibleChanged" Visibility="{Binding visibleSettigPanel, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ucDriverDirection}" d:IsHidden="True">
            <i:Interaction.Triggers>
                <i:EventTrigger SourceObject="{Binding ElementName=CanvasSetting}" EventName="MouseLeave">
                    <i:Interaction.Behaviors>
                        <ei:ConditionBehavior>
                            <ei:ConditionalExpression>
                                <ei:ComparisonCondition LeftOperand="{Binding IsChecked, ElementName=checkBoxAlwaseVisible}" Operator="LessThanOrEqual" RightOperand="False"/>
                            </ei:ConditionalExpression>
                        </ei:ConditionBehavior>
                    </i:Interaction.Behaviors>
                    <ei:GoToStateAction TargetName="CanvasSetting" TargetObject="{Binding ElementName=ucDriverDirection}" StateName="SettingPanel_Hid"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <i:Interaction.Behaviors>
                <ei:MouseDragElementBehavior x:Name="mouseDragElementBehaviorBorder" X="{Binding setX, ElementName=ucDriverDirection, Mode=TwoWay}" Y="{Binding setY, ElementName=ucDriverDirection, Mode=TwoWay}"/>
            </i:Interaction.Behaviors>
            <Border x:Name="border" Background="#FFBBBBBB" BorderBrush="Black" BorderThickness="1" CornerRadius="4" Width="304" MinWidth="304" MinHeight="136" MaxWidth="304" MaxHeight="136" UseLayoutRounding="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" SnapsToDevicePixels="True" Grid.IsSharedSizeScope="True" ClipToBounds="True" Height="136" d:LayoutOverrides="Width, Height" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5" Padding="0">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Grid MinWidth="304" MinHeight="136" Margin="0,0,-2,-2">
                    <i:Interaction.Triggers>
                        <ei:DataTrigger Binding="{Binding Text, ElementName=comboBox}" Value="Auto">
                            <ei:ChangePropertyAction TargetName="button" TargetObject="{Binding ElementName=buttonStop}" PropertyName="Visibility">
                                <ei:ChangePropertyAction.Value>
                                    <Visibility>Collapsed</Visibility>
                                </ei:ChangePropertyAction.Value>
                            </ei:ChangePropertyAction>
                        </ei:DataTrigger>
                        <ei:DataTrigger Binding="{Binding Text, ElementName=comboBox}" Value="Manual">
                            <ei:ChangePropertyAction TargetName="button" TargetObject="{Binding ElementName=buttonStop}" PropertyName="Visibility">
                                <ei:ChangePropertyAction.Value>
                                    <Visibility>Visible</Visibility>
                                </ei:ChangePropertyAction.Value>
                            </ei:ChangePropertyAction>
                        </ei:DataTrigger>
                    </i:Interaction.Triggers>
                    <ArrowPointer:ucArrowPointer x:Name="arrowAmperage" Height="Auto" Margin="10,8,156,60" Width="Auto" ValuePr="A" MaxValue="100"/>
                    <ComboBox x:Name="comboBox" Margin="18,82,0,0" SelectedIndex="0" Padding="2,-1,2,2" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Width="65" d:LayoutOverrides="HorizontalAlignment" Height="17" VerticalAlignment="Top" IsEnabled="False">
                        <ComboBoxItem Content="Manual"/>
                        <ComboBoxItem Content="Auto"/>
                    </ComboBox>
                    <ArrowPointer:ucArrowPointer x:Name="arrowFRQ" Height="Auto" Margin="148,8,18,60" Width="Auto" MaxValue="50" visualMinMax="True" Visibility="{Binding isPCHT, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ucDriverDirection}" d:LayoutOverrides="HorizontalAlignment" ChangedValue_Event="arrowFRQ_ChangedValue_Event" ValuePr="HZ">
                        <i:Interaction.Triggers>
                            <ei:DataTrigger Binding="{Binding Text, ElementName=comboBox}" Value="Manual">
                                <ei:ChangePropertyAction TargetName="arrowFRQ" TargetObject="{Binding ElementName=arrowFRQ}" PropertyName="useSettingValue" Value="True" IsEnabled="False"/>
                            </ei:DataTrigger>
                            <ei:DataTrigger Binding="{Binding Text, ElementName=comboBox}" Value="Manual" Comparison="NotEqual">
                                <ei:ChangePropertyAction TargetName="arrowFRQ" TargetObject="{Binding ElementName=arrowFRQ}" PropertyName="useSettingValue" IsEnabled="False"/>
                            </ei:DataTrigger>
                        </i:Interaction.Triggers>
                    </ArrowPointer:ucArrowPointer>
                    <Button x:Name="buttonStart" Content="Start" Height="21" Margin="10,108,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="80" Visibility="{Binding Visibility, ElementName=buttonStop}" PreviewMouseLeftButtonUp="buttonStart_PreviewMouseLeftButtonUp" Click="buttonStart_Click" Background="Gainsboro">
                        <i:Interaction.Triggers>
                            <ei:DataTrigger Binding="{Binding IsWorker, ElementName=ucDriverDirection}" Value="true">
                                <ei:ChangePropertyAction PropertyName="Background">
                                    <ei:ChangePropertyAction.Value>
                                        <SolidColorBrush Color="#FF0BA20B"/>
                                    </ei:ChangePropertyAction.Value>
                                </ei:ChangePropertyAction>
                            </ei:DataTrigger>
                            <ei:DataTrigger Binding="{Binding IsWorker, ElementName=ucDriverDirection}" Value="false">
                                <ei:ChangePropertyAction PropertyName="Background">
                                    <ei:ChangePropertyAction.Value>
                                        <SolidColorBrush Color="Gainsboro"/>
                                    </ei:ChangePropertyAction.Value>
                                </ei:ChangePropertyAction>
                            </ei:DataTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button x:Name="buttonStop" Content="Stop" Height="21" Margin="95,108,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="81" PreviewMouseLeftButtonUp="buttonStop_PreviewMouseLeftButtonUp" Click="buttonStop_Click"/>
                    <local:ucNumberOfUpDown x:Name="maxAmperage" HorizontalAlignment="Left" Height="21" Margin="235,80,0,0" VerticalAlignment="Top" Width="56" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0"/>
                    <TextBox HorizontalAlignment="Left" Height="16" Margin="187,82.436,0,0" TextWrapping="Wrap" Text="Maks A" VerticalAlignment="Top" Width="48" Background="{x:Null}" BorderBrush="{x:Null}"/>
                    <Button x:Name="buttonReset_" Content="Reset" Height="21.667" Margin="235,107.667,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="56" Visibility="{Binding Error, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ucDriverDirection}" Click="buttonReset__Click"/>
                    <Button x:Name="buttonPID" Content="PID" Height="22" Margin="95,81,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="39" Visibility="{Binding IsPresentPID, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ucDriverDirection}" d:LayoutOverrides="HorizontalAlignment"/>
                    <CheckBox x:Name="checkBoxAlwaseVisible" Content="" HorizontalAlignment="Left" Margin="2,2,0,0" VerticalAlignment="Top" Width="16" Height="15"/>
                </Grid>
            </Border>
        </Canvas>
        <Canvas x:Name="CanvasPID" Margin="-138,0,-60,-303" HorizontalAlignment="Left" Width="264" Height="368" VerticalAlignment="Top" d:IsHidden="True">
            <i:Interaction.Behaviors>
                <ei:MouseDragElementBehavior/>
            </i:Interaction.Behaviors>
            <Pid:ucPid x:Name="ucPid" Height="366" Width="262" RenderTransformOrigin="0.5,0.5" PidValue="0" Opacity="0" Visibility="{Binding visiblePidPanel, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ucDriverDirection}" VerticalAlignment="Top" HorizontalAlignment="Left" IsVisibleChanged="ucPid_IsVisibleChanged">
                <Pid:ucPid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Pid:ucPid.RenderTransform>
            </Pid:ucPid>


        </Canvas>


    </Grid>


</y:ClassVirtualAdd>
