<y:ClassVirtualAdd
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LibraryMySCADA.Sensor"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:y="clr-namespace:LibraryMySCADA.Virt"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:LibraryMySCADA="clr-namespace:LibraryMySCADA" 
    x:Name="userControl" 
    x:Class="LibraryMySCADA.Sensor.ucSensor"
             mc:Ignorable="d" Loaded="UserControl_Loaded" Width="191.917">
    <y:ClassVirtualAdd.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/LibraryMySCADA;component/DictionaryLibrarySCADA.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Grid Height="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" Margin="0,0,0,-5" ScrollViewer.PanningMode="Both" UseLayoutRounding="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Stretch" Width="Auto" d:LayoutOverrides="LeftPosition, RightPosition" >
                                <Viewbox HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="13" Margin="0" Width="52" Stretch="Uniform">
                                    <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="Label" Height="13" Width="52"/>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
            <Style x:Key="SimpleScrollBar" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="18"/>
                                    <RowDefinition Height="0.00001*"/>
                                    <RowDefinition MaxHeight="18"/>
                                </Grid.RowDefinitions>

                                <RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineUpCommand">
                                    <Grid>
                                        <Path x:Name="DecreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z"/>
                                    </Grid>
                                </RepeatButton>

                                <!-- Track is a special layout container which sizes the thumb and the repeat button which do jump scrolling either side of it -->
                                <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource SimpleThumbStyle}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand"/>
                                    </Track.DecreaseRepeatButton>
                                </Track>

                                <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineDownCommand">
                                    <Grid>
                                        <Path x:Name="IncreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                </RepeatButton>
                            </Grid>

                            <!-- This uses a single template for ScrollBar and rotate it to be Horizontal
                    It also changes the commands so that the it does Left and Right instead of Up and Down Commands -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">

                                    <!-- Rotate the ScrollBar from Vertical to Horizontal -->
                                    <Setter Property="LayoutTransform" TargetName="GridRoot">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>

                                    <!-- Track is bound to Orientation internally, so we need to rotate it back to Vertical -->
                                    <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>

                                    <!-- Change the commands to do Horizontal commands -->
                                    <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat"/>
                                    <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat"/>
                                    <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
                                    <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SimpleScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                <!-- The visibility of the ScrollBars is controlled by the implementation fo the control -->
                                <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}"/>
                                <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource SimpleScrollBar}" Orientation="Vertical" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <Viewbox ScrollViewer.VerticalScrollBarVisibility="Disabled" Stretch="Uniform">
                                    <ScrollViewer x:Name="PART_ContentHost" Style="{DynamicResource SimpleScrollViewer}" TextOptions.TextFormattingMode="Display" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" FontStretch="Expanded" Foreground="#FFFFE800" Height="19.367" UseLayoutRounding="True"/>

                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="OnMouseEnter1">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                    <EasingColorKeyFrame KeyTime="0" Value="#FF6FE7F9"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ImageSensor">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1.073"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ImageSensor">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1.073"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Style x:Key="LabelStyle2" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border SnapsToDevicePixels="true" Padding="2" Margin="0,0,0,-0.333" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="4" BorderThickness="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="1"/>
                                        <GradientStop Color="#FFE2C0C0"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <ContentPresenter HorizontalAlignment="Center" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="30.333" VerticalAlignment="Center" IsHitTestVisible="False" ScrollViewer.VerticalScrollBarVisibility="Disabled" UseLayoutRounding="False" FlowDirection="LeftToRight" Margin="52.398,-10,52.398,0"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="OnMouseLeave1">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ImageSensor">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.967"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ImageSensor">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.967"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </y:ClassVirtualAdd.Resources>
    <y:ClassVirtualAdd.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="border">
            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="border">
            <BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown" SourceName="border">
            <BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard1" Storyboard="{StaticResource OnMouseLeave1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonUp" SourceName="border">
            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
        </EventTrigger>
    </y:ClassVirtualAdd.Triggers>
    <Grid x:Name="grid" Margin="0,0,-0.083,0">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="error">
                    <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                            <EasingColorKeyFrame KeyTime="0" Value="#00FF0909"/>
                            <EasingColorKeyFrame KeyTime="0:0:1" Value="#FFECB7B7"/>
                            <EasingColorKeyFrame KeyTime="0:0:1.5" Value="sc#1, 0.8962694, 0.2158605, 0.2158605"/>
                        </ColorAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="errorNo">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                            <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                        </ColorAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Border x:Name="border" d:LayoutOverrides="HorizontalAlignment, VerticalAlignment" BorderBrush="#00000000" BorderThickness="1" Background="#00000000" PreviewMouseLeftButtonUp="userControl_PreviewMouseLeftButtonUp" >
            <i:Interaction.Behaviors>
                <ei:DataStateBehavior Binding="{Binding errorSensor, ElementName=userControl}" Value="true" TrueState="error" FalseState="errorNo"/>
            </i:Interaction.Behaviors>
            <Image x:Name="ImageSensor" Source="Images/датчик4.png" UseLayoutRounding="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
                <Image.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="{Binding angleTurn, ElementName=userControl}"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.LayoutTransform>
            </Image>
        </Border>
        <Canvas x:Name="CanvasInfo" Height="27.824" Margin="-24.541,-32.912,-19.459,0" VerticalAlignment="Top">
            <Border BorderBrush="Black" BorderThickness="1" Height="27.824" CornerRadius="2" Width="61" RenderTransformOrigin="0.5,0.5" Background="{Binding backSensColor, ElementName=userControl}">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="{Binding scalePanelInfo, ElementName=userControl}" ScaleY="{Binding scalePanelInfo, ElementName=userControl}"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>
                <TextBox x:Name="textBox_Value" Style="{DynamicResource TextBoxStyle1}" TextWrapping="Wrap" Text="{Binding valSensorAnalog, ElementName=userControl}" Background="#FF686868" Foreground="Black" UndoLimit="0" AllowDrop="False" Focusable="False" IsHitTestVisible="False" IsTabStop="False" FontSize="18" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0,-3,0,0"/>
            </Border>
        </Canvas>
        <Image x:Name="image" Margin="0,10,-38.78,12.5" Source="Images/error.png" HorizontalAlignment="Left" VerticalAlignment="Top" UseLayoutRounding="False" SnapsToDevicePixels="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" Visibility="Collapsed"/>
        <Canvas x:Name="CanvasInfoSetting" Height="204" Width="346" VerticalAlignment="Top" d:LayoutOverrides="Height" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" ScrollViewer.VerticalScrollBarVisibility="Disabled" Visibility="{Binding VisualSetting, ElementName=userControl}">
            <Canvas.LayoutTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="{Binding scalePanelSetting, ElementName=userControl}" ScaleY="{Binding scalePanelSetting, ElementName=userControl}"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Canvas.LayoutTransform>
            <i:Interaction.Behaviors>
                <ei:MouseDragElementBehavior x:Name="mouseDrag"/>
            </i:Interaction.Behaviors>
            <Viewbox Stretch="Fill" Width="{Binding ActualWidth, ElementName=CanvasInfoSetting}" Height="{Binding ActualHeight, ElementName=CanvasInfoSetting}">
                <Border BorderBrush="Black" BorderThickness="1" Background="#FFECECEC" CornerRadius="4" Height="204" Width="346">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="label" Content="Настройки" Height="31" Margin="17,-16.277,75,0" VerticalAlignment="Top" Style="{DynamicResource LabelStyle2}" Background="#FFD4D4D4" FontSize="26.667" FontWeight="Bold"/>
                        <LibraryMySCADA:ucNumberOfUpDown x:Name="KAngle" HorizontalAlignment="Left" Height="30" Margin="21,27,0,0" VerticalAlignment="Top" Width="113" Value="1" Max="2" Min="-2" Step="0.01"/>
                        <LibraryMySCADA:ucNumberOfUpDown x:Name="OffsetLine" HorizontalAlignment="Left" Height="30" Margin="21,62,0,0" Width="113" VerticalAlignment="Top" d:LayoutOverrides="VerticalAlignment" Min="-100" Step="0.1"/>
                        <LibraryMySCADA:ucNumberOfUpDown x:Name="ScaleLIne" HorizontalAlignment="Left" Height="30" Margin="21,97,0,0" Width="113" VerticalAlignment="Top" Value="1" Min="-100" Step="0.01"/>
                        <TextBlock x:Name="textBlock_Copy" TextWrapping="Wrap" VerticalAlignment="Top" Margin="139,31.928,10,0" FontSize="18.667" FontWeight="Bold"><Run Text="Угловой "/><Run Text="K"/></TextBlock>
                        <TextBlock x:Name="textBlock_Copy1" TextWrapping="Wrap" Text="Смещение" Margin="139,66.928,10,0" FontSize="18.667" FontWeight="Bold" VerticalAlignment="Top"/>
                        <TextBlock x:Name="textBlock_Copy2" TextWrapping="Wrap" Text="Масштаб" Margin="139,0,10,75.24" FontSize="18.667" FontWeight="Bold" VerticalAlignment="Bottom"/>
                        <LibraryMySCADA:ucNumberOfUpDown x:Name="DecCount" HorizontalAlignment="Left" Height="30" Margin="21,132,0,0" Width="113" VerticalAlignment="Top" Max="5"/>
                        <TextBlock x:Name="textBlock_Copy3" TextWrapping="Wrap" Text="Десятичные разр." Margin="139,0,10,40.241" FontSize="18.667" FontWeight="Bold" VerticalAlignment="Bottom"/>
                        <Button x:Name="button" Content="Button" HorizontalAlignment="Right" Height="31" Margin="0,-16.277,18.666,0" VerticalAlignment="Top" Width="30.334" Click="button_Click" Style="{DynamicResource ButtonCloseStyle}"/>
                    </Grid>
                </Border>
            </Viewbox>
        </Canvas>
    </Grid>
</y:ClassVirtualAdd>
